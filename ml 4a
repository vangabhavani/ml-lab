# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
# url = "BostonHousing.csv"  
# The file is likely not in the current directory. Let's try loading it from a URL.
url = "https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv"
data = pd.read_csv(url)

# Display the first 5 rows of the dataset
print(data.head())

# Check for missing values
print(data.isnull().sum())

# Split into features (X) and target (Y)
X = data.drop(columns=['medv'])  # Features (all columns except 'medv')
Y = data['medv']  # Target (median value of owner-occupied homes)

# Display the shapes of X and Y
print(f"Features shape: {X.shape}")
print(f"Target shape: {Y.shape}")

# Split the data into training and testing sets
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

# Initialize and train the model
model = LinearRegression()
model.fit(X_train, Y_train)

# Make predictions
Y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(Y_test, Y_pred)
r2 = r2_score(Y_test, Y_pred)
print(f"Mean Squared Error (MSE): {mse}")
print(f"R-squared (R2): {r2}")

# Visualize the results for a single feature (e.g., 'rm')
plt.scatter(X_test['rm'], Y_test, color='blue', label='Actual Data')
plt.scatter(X_test['rm'], Y_pred, color='red', label='Predicted Data')
plt.xlabel('Average Number of Rooms (rm)')
plt.ylabel('Median Value of Homes (medv)')
plt.title('Linear Regression: Rooms vs Home Value')
plt.legend()
plt.show()
